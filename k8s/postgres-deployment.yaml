apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    io.kompose.network/ticketing-ticketing-net: "true"
    io.kompose.service: postgres
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  template:
    metadata:
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
            - name: PGDATA
              value: /var/lib/postgresql/data
            - name: POSTGRES_DB
              value: fang
            - name: POSTGRES_HOST_AUTH_METHOD
              value: password
            - name: POSTGRES_PASSWORD_FILE
              value: /run/secrets/postgres_password
          image: postgres:14-alpine
          livenessProbe:
            exec:
              command:
                - pg_isready
            failureThreshold: 10
            periodSeconds: 1
            timeoutSeconds: 5
          name: postgres
          ports:
            - containerPort: 5432
              hostPort: 5432
          volumeMounts:
            - mountPath: /run/secrets/postgres_password
              name: postgres_password
            - mountPath: /var/lib/postgresql/data
              name: ticketing-postgres
            - mountPath: /docker-entrypoint-initdb.d
              name: postgres-claim1
      hostname: postgres
      restartPolicy: OnFailure
      volumes:
        - name: postgres_password
          secret:
            items:
              - key: postgres_password
                path: postgres_password
            secretName: postgres_password
        - name: ticketing-postgres
          persistentVolumeClaim:
            claimName: ticketing-postgres
        - name: postgres-claim1
          persistentVolumeClaim:
            claimName: postgres-claim1
