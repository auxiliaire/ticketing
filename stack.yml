networks:
    ticketing-net:
        driver: overlay
        driver_opts:
            encrypted: 'yes'
volumes:
    ticketing-mariadb:
    ticketing-postgres:
    ticketing-redis:
services:
    mariadb:
        image: mariadb
        hostname: mariadb
        command: --init-file /data/init.sql
        environment:
            MARIADB_ROOT_PASSWORD_FILE: /run/secrets/mariadb_root_password
            MARIADB_DATABASE: ticketing
            MARIADB_USER: ticketing
            MARIADB_PASSWORD_FILE: /run/secrets/mariadb_password
        secrets:
            - mariadb_root_password
            - mariadb_password
        deploy:
            replicas: 1
            placement:
                constraints:
                    - 'node.role == worker'
            update_config:
                parallelism: 1
                delay: 10s
                failure_action: rollback
            restart_policy:
                condition: on-failure
                max_attempts: 3
                delay: 5s
                window: 120s
        networks:
            - ticketing-net
        ports:
            - published: 3306
              target: 3306
        volumes:
            - ticketing-mariadb:/var/lib/mysql
            - type: bind
              source: ./extra_migrations/mariadb
              target: /data
    postgres:
        image: postgres:14-alpine
        hostname: postgres
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
            POSTGRES_DB: fang
            POSTGRES_HOST_AUTH_METHOD: password
            PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
            PGDATA: /var/lib/postgresql/data
        secrets:
            - postgres_password
        deploy:
            replicas: 1
            placement:
                constraints:
                    - 'node.role == worker'
            update_config:
                parallelism: 1
                delay: 10s
                failure_action: rollback
            restart_policy:
                condition: on-failure
                max_attempts: 3
                delay: 5s
                window: 120s
        networks:
            - ticketing-net
        ports:
            - published: 5432
              target: 5432
        volumes:
            - ticketing-postgres:/var/lib/postgresql/data
            - type: bind
              source: ./extra_migrations/postgres
              target: /docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 1s
            timeout: 5s
            retries: 10
    redis:
        image: redis:7-alpine
        hostname: redis
        command: redis-server --save 60 1 --loglevel warning
        deploy:
            placement:
                constraints:
                    - 'node.role == worker'
        networks:
            - ticketing-net
        volumes:
            - type: volume
              source: ticketing-redis
              target: /data
    mailhog:
        image: mailhog/mailhog:latest
        hostname: mailhog
        deploy:
            placement:
                constraints:
                    - 'node.role == worker'
        networks:
            - ticketing-net
        ports:
            - published: 1025
              target: 1025
            - published: 8025
              target: 8025
    backend:
        image: viktordaroczi/ticketing
        hostname: ticketing-backend
        depends_on:
            - mariadb
            - postgres
            - redis
            - mailhog
        environment:
            SERVER_PORT: 8000
            CLIENT_URL: http://127.0.0.1:8080
            REDIS_URL: redis://redis/
            MARIADB_USER: ticketing
            MARIADB_PASSWORD_FILE: /run/secrets/mariadb_password
            MARIADB_HOST: mariadb
            MARIADB_DATABASE: ticketing
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
            POSTGRES_HOST: postgres
            POSTGRES_DB: fang
            JWT_SECRET_FILE: /run/secrets/jwt_secret
            SQLX_OFFLINE: 1
            ADMIN_EMAIL: admin@example.com
            SMTP_USERNAME: notset
            SMTP_PASSWORD_FILE: /run/secrets/smtp_password
            SMTP_HOST: mailhog
            SMTP_PORT: 1025
            SMTP_TLS_OFF: 1
            MAX_BODY_LIMIT: 5
            BUCKET_NAME: dv-rust-ticketing-s3-bucket
        secrets:
            - jwt_secret
            - mariadb_password
            - postgres_password
            - smtp_password
        deploy:
            replicas: 1
            placement:
                constraints:
                    - 'node.role == worker'
            update_config:
                parallelism: 2
                delay: 10s
                failure_action: rollback
            restart_policy:
                condition: on-failure
                max_attempts: 3
                delay: 5s
                window: 120s
        networks:
            - ticketing-net
        ports:
            - published: 8000
              target: 8000
    frontend:
        image: viktordaroczi/ticketing-frontend
        hostname: ticketing-frontend
        deploy:
            replicas: 1
            placement:
                constraints:
                    - 'node.role == worker'
            update_config:
                parallelism: 2
                delay: 10s
                failure_action: rollback
            restart_policy:
                condition: on-failure
                max_attempts: 3
                delay: 5s
                window: 120s
        networks:
            - ticketing-net
        ports:
            - published: 8080
              target: 8080

secrets:
    mariadb_root_password:
        file: secret_mariadb_root_password.txt
    mariadb_password:
        file: secret_mariadb_password.txt
    postgres_password:
        file: secret_postgres_password.txt
    jwt_secret:
        file: secret_jwt_secret.txt
    smtp_password:
        file: secret_smtp_password.txt